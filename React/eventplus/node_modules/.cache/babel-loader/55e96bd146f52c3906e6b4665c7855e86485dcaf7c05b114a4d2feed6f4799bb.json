{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\42351028856\\\\Desktop\\\\JavaScript\\\\React\\\\eventplus\\\\src\\\\Pages\\\\EventosAlunoPage\\\\EventosAlunoPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport MainContent from \"../../components/MainContent/MainContent\";\nimport Title from \"../../components/Title/Title\";\nimport Table from \"./TableEvA/TableEvA\";\nimport Container from \"../../components/Container/Container\";\nimport { Select } from \"../../components/FormComponents/FormComponents\";\nimport Spinner from \"../../components/Spinner/Spinner\";\nimport Modal from \"../../components/Modal/Modal\";\nimport api from \"../../Services/Service\";\nimport \"./EventosAlunoPage.css\";\nimport { UserContext } from \"../../assets/context/AuthContext\";\nimport { clear } from \"@testing-library/user-event/dist/clear\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventosAlunoPage = () => {\n  _s();\n  // state do menu mobile\n  const [exibeNavbar, setExibeNavbar] = useState(false);\n  const [eventos, setEventos] = useState([]);\n  // select mocado\n  const [quaisEventos, setQuaisEventos] = useState([{\n    value: \"1\",\n    text: \"Todos os eventos\"\n  }, {\n    value: \"2\",\n    text: \"Meus eventos\"\n  }]);\n  const [tipoEvento, setTipoEvento] = useState(\"1\"); //código do tipo do Evento escolhido\n  const [showSpinner, setShowSpinner] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  // recupera os dados globais do usuário\n  const {\n    userData,\n    setUserData\n  } = useContext(UserContext);\n  useEffect(() => {\n    loadEventsType();\n  }, [tipoEvento, userData.userId]);\n  async function loadEventsType() {\n    setShowSpinner(true);\n    try {\n      if (tipoEvento === \"1\") {\n        // todos os eventos\n        const promise = await api.get(\"/Evento\");\n        const promiseEventos = await api.get(`/PresencasEvento/ListarMinhas/${userData.userId}`);\n        const dadosMarcados = verificaPresenca(promise.data, promiseEventos.data);\n        console.clear();\n        console.log(\"DADOS MARCADOS\");\n        console.log(dadosMarcados);\n        setEventos(promise.data);\n        console.log(promise.data);\n      } else {\n        // meus eventos\n        let arrEventos = [];\n        const promiseEventos = await api.get(`/PresencasEvento/ListarMinhas/${userData.userId}`);\n        promiseEventos.data.forEach(element => {\n          arrEventos.push({\n            ...element.evento,\n            situacao: element.situacao,\n            isPresencaEvento: element.idPresencaEvento\n          });\n        });\n        setEventos(arrEventos);\n      }\n    } catch (error) {\n      console.log(\"Erro ao carregar os eventos\");\n      console.log(error);\n    }\n    setShowSpinner(false);\n  }\n  const verificaPresenca = (arrAllEvents, eventsUser) => {\n    for (let x = 0; x < arrAllEvents.length; x++) {\n      // para cada evento (todos)\n      // verifica se o aluno está participando do evento atual (x)\n      for (let i = 0; i < eventsUser.length; i++) {\n        if (arrAllEvents[x].idEvento === eventsUser[i].evento.idEvento) {\n          arrAllEvents[x].situacao = true;\n          arrAllEvents[x].idPresencaEvento = eventsUser[i].idPresencaEvento;\n          break;\n        }\n      }\n    }\n    // devolve o array modificado\n    return arrAllEvents;\n  };\n\n  // toggle meus eventos ou todos os eventos\n  function myEvents(tpEvent) {\n    setTipoEvento(tpEvent);\n  }\n  async function loadMyComentary(idComentary) {\n    return \"????\";\n  }\n  const showHideModal = () => {\n    setShowModal(showModal ? false : true);\n  };\n  const commentaryRemove = async () => {\n    alert(\"Remover o comentário\");\n  };\n  async function handleConnect(idEvent, connect = false, idPresencaEvento = null) {\n    // conecta o usuário e atualiza a tela\n    if (connect === true) {\n      try {\n        const promise = await api.post(\"/PresencasEvento\", {\n          situacao: true,\n          idUsuario: userData.userId,\n          idEvento: idEvent\n        });\n        if (promise.status === 201) {\n          loadEventsType();\n          alert(\"Presença confirmada, parabéns\");\n        }\n      } catch (error) {\n        console.log(\"Erro ao conectar\");\n        console.log(error);\n      }\n      return;\n    } else {\n      try {\n        // unconnect\n        console.log(\"ID DAPRESENÇA DO EVENTO\");\n        console.log(idPresencaEvento);\n        const promiseDelete = api.delete(\"/PresencasEvento/\" + idPresencaEvento);\n        if (promiseDelete.status) {}\n        alert(\"Desconectar do evento \" + idEvent);\n      } catch (error) {\n        console.log(\"Erro ao desconectar\");\n        console.log(error);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainContent, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          titleText: \"Eventos\",\n          additionalClass: \"custom-title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          id: \"id-tipo-evento\",\n          name: \"tipo-evento\",\n          required: true,\n          dados: quaisEventos // aqui o array dos tipos\n          ,\n          manipulationFunction: e => myEvents(e.target.value) // aqui só a variável state\n          ,\n          defaultValue: tipoEvento,\n          additionalClass: \"select-tp-evento\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          dados: eventos,\n          fnConnect: handleConnect,\n          fnShowModal: () => {\n            showHideModal();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), showSpinner ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 22\n    }, this) : null, showModal ? /*#__PURE__*/_jsxDEV(Modal, {\n      userId: userData.userId,\n      showHideModal: showHideModal,\n      fnDelete: commentaryRemove,\n      fnDelete: commentaryRemove,\n      fnDelete: commentaryRemove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n};\n_s(EventosAlunoPage, \"JLNc3nCo2hJBtwHtIoe9r58f7ww=\");\n_c = EventosAlunoPage;\nexport default EventosAlunoPage;\nvar _c;\n$RefreshReg$(_c, \"EventosAlunoPage\");","map":{"version":3,"names":["React","useContext","useEffect","useState","MainContent","Title","Table","Container","Select","Spinner","Modal","api","UserContext","clear","jsxDEV","_jsxDEV","Fragment","_Fragment","EventosAlunoPage","_s","exibeNavbar","setExibeNavbar","eventos","setEventos","quaisEventos","setQuaisEventos","value","text","tipoEvento","setTipoEvento","showSpinner","setShowSpinner","showModal","setShowModal","userData","setUserData","loadEventsType","userId","promise","get","promiseEventos","dadosMarcados","verificaPresenca","data","console","log","arrEventos","forEach","element","push","evento","situacao","isPresencaEvento","idPresencaEvento","error","arrAllEvents","eventsUser","x","length","i","idEvento","myEvents","tpEvent","loadMyComentary","idComentary","showHideModal","commentaryRemove","alert","handleConnect","idEvent","connect","post","idUsuario","status","promiseDelete","delete","children","titleText","additionalClass","fileName","_jsxFileName","lineNumber","columnNumber","id","name","required","dados","manipulationFunction","e","target","defaultValue","fnConnect","fnShowModal","fnDelete","_c","$RefreshReg$"],"sources":["C:/Users/42351028856/Desktop/JavaScript/React/eventplus/src/Pages/EventosAlunoPage/EventosAlunoPage.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport MainContent from \"../../components/MainContent/MainContent\";\r\nimport Title from \"../../components/Title/Title\";\r\nimport Table from \"./TableEvA/TableEvA\";\r\nimport Container from \"../../components/Container/Container\";\r\nimport { Select } from \"../../components/FormComponents/FormComponents\"\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\nimport Modal from \"../../components/Modal/Modal\";\r\nimport api from \"../../Services/Service\";\r\n\r\nimport \"./EventosAlunoPage.css\";\r\nimport { UserContext } from \"../../assets/context/AuthContext\";\r\nimport { clear } from \"@testing-library/user-event/dist/clear\";\r\n\r\nconst EventosAlunoPage = () => {\r\n  // state do menu mobile\r\n  const [exibeNavbar, setExibeNavbar] = useState(false);\r\n  const [eventos, setEventos] = useState([]);\r\n  // select mocado\r\n  const [quaisEventos, setQuaisEventos] = useState([\r\n    { value: \"1\", text: \"Todos os eventos\" },\r\n    { value: \"2\", text: \"Meus eventos\" },\r\n  ]);\r\n\r\n  const [tipoEvento, setTipoEvento] = useState(\"1\"); //código do tipo do Evento escolhido\r\n  const [showSpinner, setShowSpinner] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  // recupera os dados globais do usuário\r\n  const { userData, setUserData } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n\r\n    loadEventsType();\r\n  }, [tipoEvento, userData.userId]);\r\n\r\n  async function loadEventsType() {\r\n    setShowSpinner(true);\r\n    try {\r\n      if (tipoEvento === \"1\") {// todos os eventos\r\n        const promise = await api.get(\"/Evento\");\r\n        const promiseEventos = await api.get(`/PresencasEvento/ListarMinhas/${userData.userId}`);\r\n\r\n        const dadosMarcados = verificaPresenca(promise.data, promiseEventos.data);\r\n        console.clear();\r\n        console.log(\"DADOS MARCADOS\");\r\n        console.log(dadosMarcados);\r\n        setEventos(promise.data);\r\n        console.log(promise.data);\r\n\r\n      } else {// meus eventos\r\n        let arrEventos = [];\r\n        const promiseEventos = await api.get(`/PresencasEvento/ListarMinhas/${userData.userId}`);\r\n        promiseEventos.data.forEach((element) => {\r\n          arrEventos.push({\r\n            ...element.evento,\r\n            situacao: element.situacao,\r\n            isPresencaEvento: element.idPresencaEvento\r\n            \r\n           })\r\n        });\r\n        setEventos(arrEventos);\r\n      }        \r\n      \r\n    } catch (error) {\r\n      console.log(\"Erro ao carregar os eventos\");\r\n      console.log(error);\r\n    }\r\n    setShowSpinner(false);\r\n    \r\n  }\r\n\r\n\r\n  const verificaPresenca = ( arrAllEvents, eventsUser ) => {\r\n\r\n    for (let x = 0; x < arrAllEvents.length; x++) {// para cada evento (todos)\r\n      // verifica se o aluno está participando do evento atual (x)\r\n      for (let i = 0; i < eventsUser.length; i++) {\r\n        if (arrAllEvents[x].idEvento === eventsUser[i].evento.idEvento) {\r\n\r\n          arrAllEvents[x].situacao = true;\r\n          arrAllEvents[x].idPresencaEvento = eventsUser[i].idPresencaEvento;\r\n          break;\r\n          \r\n        }        \r\n      }\r\n    }\r\n    // devolve o array modificado\r\n    return arrAllEvents;\r\n  }\r\n\r\n  // toggle meus eventos ou todos os eventos\r\n  function myEvents(tpEvent) {\r\n    setTipoEvento(tpEvent);\r\n  }\r\n\r\n  async function loadMyComentary(idComentary) {\r\n    return \"????\";\r\n  }\r\n\r\n  const showHideModal = () => {\r\n    setShowModal(showModal ? false : true);\r\n  };\r\n\r\n  const commentaryRemove = async () => {\r\n    alert(\"Remover o comentário\");\r\n  };\r\n\r\n   async function handleConnect(idEvent, connect = false, idPresencaEvento = null) {\r\n    // conecta o usuário e atualiza a tela\r\n    if (connect === true) {\r\n      try {\r\n        const promise = await api.post(\"/PresencasEvento\", {\r\n          situacao: true,\r\n          idUsuario: userData.userId,\r\n          idEvento: idEvent,\r\n        });\r\n\r\n        if (promise.status === 201) {\r\n          loadEventsType();\r\n          alert(\"Presença confirmada, parabéns\");\r\n        }\r\n        \r\n      } catch (error) {\r\n        console.log(\"Erro ao conectar\");\r\n        console.log(error);\r\n      }\r\n      return;\r\n    } else {\r\n      try {\r\n            // unconnect\r\n      console.log(\"ID DAPRESENÇA DO EVENTO\");\r\n      console.log(idPresencaEvento);\r\n  \r\n      const promiseDelete = api.delete(\"/PresencasEvento/\" + idPresencaEvento);\r\n      if (promiseDelete.status ) {\r\n        \r\n      }\r\n  \r\n      alert(\"Desconectar do evento \" + idEvent);\r\n      } catch (error) {\r\n        console.log(\"Erro ao desconectar\");\r\n        console.log(error);\r\n      }\r\n\r\n    }\r\n\r\n\r\n    \r\n  }\r\n  return (\r\n    <>\r\n      {/* <Header exibeNavbar={exibeNavbar} setExibeNavbar={setExibeNavbar} /> */}\r\n\r\n      <MainContent>\r\n        <Container>\r\n          <Title titleText={\"Eventos\"} additionalClass=\"custom-title\" />\r\n\r\n          <Select\r\n            id=\"id-tipo-evento\"\r\n            name=\"tipo-evento\"\r\n            required={true}\r\n            dados={quaisEventos} // aqui o array dos tipos\r\n            manipulationFunction={(e) => myEvents(e.target.value)} // aqui só a variável state\r\n            defaultValue={tipoEvento}\r\n            additionalClass=\"select-tp-evento\"\r\n          />\r\n          <Table\r\n            dados={eventos}\r\n            fnConnect={handleConnect}\r\n            fnShowModal={() => {\r\n              showHideModal();\r\n            }}\r\n          />\r\n        </Container>\r\n      </MainContent>\r\n\r\n      {/* SPINNER -Feito com position */}\r\n      {showSpinner ? <Spinner /> : null}\r\n\r\n      {showModal ? (\r\n        <Modal\r\n          userId={userData.userId}\r\n          showHideModal={showHideModal}\r\n          fnDelete={commentaryRemove}\r\n          fnDelete={commentaryRemove}\r\n          fnDelete={commentaryRemove}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventosAlunoPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}